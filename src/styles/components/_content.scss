@use '../general' as g;

.content {
  max-width: 60em;
  margin-bottom: 1rem;
  // A border-radius here doesn't actually round the corners, it needs doing on the two children
  // But it does mean the box-shadow doesn't ignore the border-radius
  border-radius: var(--borderRadius);
  box-shadow: 0.5rem 2rem 1.5rem 0px rgba(181, 190, 201, 0.25); // this colour is lightGrayishBlue

  @include g.breakpoint-up(large) {
    display: flex;
  }

  &__image {
    & img {
      border-start-start-radius: var(--borderRadius);
      border-start-end-radius: var(--borderRadius);

      @include g.breakpoint-up(large) {
        // To make sure image is always as tall as the text and not squished
        height: 100%;
        object-fit: cover;
        border-start-end-radius: 0;
        border-end-start-radius: var(--borderRadius);
      }
    }
  }

  &__text {
    padding: var(--textPaddingTop) var(--textPaddingSide)
      var(--textPaddingBottom) var(--textPaddingSide);
    background-color: hsl(0, 0%, 100%);
    border-end-start-radius: var(--borderRadius);
    border-end-end-radius: var(--borderRadius);

    @include g.breakpoint-up(large) {
      border-end-start-radius: 0;
      border-start-end-radius: var(--borderRadius);
    }
  }

  &__header {
    margin-bottom: 1rem;
    color: var(--veryDarkGrayishBlue);
  }

  &__paragraph {
    margin-bottom: 2rem;
  }

  &__footer {
    position: relative;
    display: grid;
    grid-template-columns: 2rem 1fr 2rem;
    grid-template-rows: repeat (2, auto);
    grid-template-areas:
      'avatar name arrow'
      'avatar date arrow';
    column-gap: 1em;
  }

  &__avatar {
    grid-area: avatar;
    border-radius: 50%;
  }

  &__name {
    grid-area: name;
    font-weight: 700;
    color: var(--veryDarkGrayishBlue);
  }

  &__date {
    grid-area: date;
  }

  &__arrow {
    grid-area: arrow;
    display: grid;
    place-content: center;
    width: 1.5rem;
    height: 1.5rem;
    background: var(--lightGrayishBlue);
    border: none;
    border-radius: 50%;
    cursor: pointer;
    z-index: 2;

    &.show {
      background: var(--desaturatedDarkBlue);
    }
  }

  &__share {
    position: absolute;
    display: flex;
    padding: 1.5em 2em;
    // 'Hack' to get share to fill whole width, and go to the bottom ignoring padding on __text
    width: calc(100% + var(--textPaddingSide) * 2);
    inset-inline-start: calc(var(--textPaddingSide) * -1);
    inset-block-end: calc(var(--textPaddingBottom) * -1);
    background-color: var(--veryDarkGrayishBlue);
    border-end-start-radius: var(--borderRadius);
    border-end-end-radius: var(--borderRadius);
    opacity: 0;
    z-index: -1; // So it goes behind content and doesn't interfere with it while hidden
    transition: opacity var(--transitionTime) ease-in-out,
      z-index 0ms ease var(--transitionTime);

    @include g.breakpoint-up(large) {
      width: 60%;
      inset-inline-start: 65%;
      inset-block-end: 170%;
      padding: 1em 3em;
      border-radius: 0.75em;
      box-shadow: 0.5rem 0.5rem 1rem 0px rgba(181, 190, 201, 0.25); // this colour is lightGrayishBlue

      &::after {
        position: absolute;
        content: '';
        width: 0;
        height: 0;
        inset-inline-start: calc(50% - 0.5rem);
        inset-block-end: -0.5rem;
        border-left: 0.5rem solid transparent;
        border-right: 0.5rem solid transparent;
        border-top: 0.5rem solid var(--veryDarkGrayishBlue);
      }
    }

    &.show {
      opacity: 1;
      z-index: 1;
      transition-delay: 0ms;
    }
  }

  &__sharetext {
    font-size: 0.67rem;
    color: var(--grayishBlue);
    text-transform: uppercase;
    letter-spacing: 0.33em;
  }

  &__shareimages {
    display: flex;
  }

  &__logo {
    margin: 0 0.5em;
    background: transparent;
    border: none;
    cursor: pointer;

    &:first-of-type {
      margin-inline-start: 1em;
    }

    & img {
      max-width: unset; // Stop them from being shrunk
    }
  }
}
